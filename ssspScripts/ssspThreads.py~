#!/usr/bin/python
#Adrian Avila
#Esperanza Medina
#copyright 2015

import os
#The pin tool will use the .so algorithm to count the number of metrics on the sssp benchmark with the given .bins

usertop="/home/kaya3/aavila"
top="%(usertop)s/thesis-repo" %locals()
KronTotals="%(top)s/Tracking/outputs/sssp/ssspKronMetricThreads" %locals()
KronMetrics="%(top)s/Tracking/outputs/sssp/ssspKronMetricThreads" %locals()

#os.system("cd /home/kaya1/aavila/pin-2.14-71313-gcc.4.4.7-linux/source/tools/ManualExamples"%locals())
#os.system("make pinatrace_thesis.test"%locals())

vertices=22
edges=32
for threads in [10, 16, 32, 64, 128]:
     if vertices < 10:
       zero="0"
     else:
       zero=""
  
     #run pin using pinatrace (Mem R/W) on sssp program
     os.system("time (%(top)s/pin-2.14-71313-gcc.4.4.7-linux/pin -t %(top)s/pin-2.14-71313-gcc.4.4.7-linux/source/tools/ManualExamples/obj-intel64/pinatrace_thesis.so -- %(top)s/Green-Marl/apps/output_cpp/bin/sssp %(top)s/Green-Marl/apps/output_cpp/data/KronGraph%(zero)s%(vertices)i_%(edges)i_1_Thesis.bin %(threads)i) &> %(KronTotals)s/ssspOutputThreads%(zero)s%(vertices)i_%(edges)i_%(threads)i.txt" %locals())
  
     #run pin using new MyPinTool (Mem R/W) on sssp program
     os.system("time (%(top)s/pin-2.14-71313-gcc.4.4.7-linux/pin -t %(top)s/pin-2.14-71313-gcc.4.4.7-linux/source/tools/MyPinTool/obj-intel64/MyPinTool_Thesis.so -o %(KronMetrics)s/kroneckerMetricThreads%(zero)s%(vertices)i_%(edges)i_%(threads)i.txt -- %(top)s/Green-Marl/apps/output_cpp/bin/sssp %(top)s/Green-Marl/apps/output_cpp/data/KronGraph%(zero)s%(vertices)i_%(edges)i_1_Thesis.bin %(threads)i) &>> %(KronTotals)s/ssspOutputThreads%(zero)s%(vertices)i_%(edges)i_%(threads)i.txt" %locals())
  
     #copy default .out info into a metric .txt file
     os.system("cat %(top)s/Tracking/pyScripts/pinatrace_thesis.out >> %(KronMetrics)s/kroneckerMetricThreads%(zero)s%(vertices)i_%(edges)i_%(threads)i.txt" %locals())
